@version: 4.7
@include "scl.conf"

options {
    stats(level(1));
    chain-hostnames(no);
    use-dns(no);
    keep-hostname(yes);
};

# 1. Source : lecture du fichier d'alertes Snort montÃ© en volume
source s_snort_file {
    file("/snort-logs/alert"
         follow-freq(1)
         flags(no-parse)
    );
};

# 2. Debug humain : afficher la ligne brute Snort dans les logs du conteneur
destination d_stdout {
    file("/dev/stdout"
         template("${MSG}\n")
    );
};

# 3. Destination Elasticsearch via HTTP POST
#    On fabrique directement le JSON inline dans body(...)
#    -> 1 alerte Snort = 1 POST /_doc
destination d_elasticsearch {
    http(
        url("http://elasticsearch:9200/snort-alerts-${YEAR}.${MONTH}.${DAY}/_doc")
        method("POST")
        headers("Content-Type: application/json")
        body("{\"@timestamp\":\"${ISODATE}\",\"message\":\"${MSG}\"}\n")
        workers(1)
        batch-lines(1)
    );
};


# 4. Pipeline : lire Snort -> envoyer stdout + Elasticsearch
log {
    source(s_snort_file);
    destination(d_stdout);
    destination(d_elasticsearch);
};